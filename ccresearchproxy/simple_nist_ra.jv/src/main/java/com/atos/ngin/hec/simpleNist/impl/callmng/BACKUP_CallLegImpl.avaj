package com.atos.ngin.hec.simpleNist.impl.callmng;

import javax.sip.ClientTransaction;
import javax.sip.ServerTransaction;
import javax.sip.message.Request;

import org.apache.log4j.Logger;

import com.atos.ngin.hec.simpleNist.impl.SimpleNISTResourceAdaptor;
import com.atos.ngin.hec.simpleNist.type.CallLeg;
public class CallLegImpl implements CallLeg
{
	
	private static Logger logger = Logger.getLogger("simpleNIST.CallLegImpl");

	private CallActivityImpl callActivity;
	private CallLegType type;
	private String callId;
	//	private Request initialRequest;
	private Request currentRequest;
	private ServerTransaction initialServerTransaction;
	private ClientTransaction initialClientTransaction;
	private ServerTransaction currentServerTransaction;
	private ClientTransaction currentClientTransaction;	
	private SimpleNISTResourceAdaptor ra;
	

	/**
	 * Constructor for INGRESS call leg
	 * 
	 * @param callId
	 * @param serverTransaction
	 * @param ra
	 */
	public CallLegImpl (String callId, ServerTransaction serverTransaction, SimpleNISTResourceAdaptor ra)
	{		
		type = CallLegType.INGRESS;
//		this.initialRequest = serverTransaction.getRequest();
		this.ra=ra;
		this.callId = callId;
		this.initialServerTransaction = serverTransaction;
		currentServerTransaction = serverTransaction;
		currentRequest = serverTransaction.getRequest();
	}
	
	/**
	 * Constructor for internally created EGRESS call leg
	 * 
	 * @param callActivity
	 * @param callId
	 * @param clientTransaction
	 * @param ra
	 */
	public CallLegImpl (CallActivityImpl callActivity, String callId, ClientTransaction clientTransaction, SimpleNISTResourceAdaptor ra)	
	{
		type = CallLegType.EGRESS;
		this.callActivity = callActivity;
//		this.initialRequest = clientTransaction.getRequest();
		this.ra=ra;
		this.callId = callId;
		this.initialClientTransaction = clientTransaction;
		currentClientTransaction = clientTransaction;
		currentRequest = clientTransaction.getRequest();
	}	

	public Request getCurrentRequest()
	{
		// TODO Auto-generated method stub
		return currentRequest;
//		return currentServerTransaction.getRequest();  // ??? clientTransaction.getRequest();
	}

	public String getCallId()
	{
		// TODO Auto-generated method stub
		return callId;
	}

	public CallActivityImpl getCallActivity()
	{
		return callActivity;
	}

	public ServerTransaction getCurrentServerTransaction()
	{
		return currentServerTransaction;
	}
	public ClientTransaction getCurrentClientTransaction()
	{
		return currentClientTransaction;
	}
	public void setCallActivity(CallActivityImpl callActivity)
	{
		this.callActivity = callActivity;
	}
	public void setServerTransaction(ServerTransaction serverTransaction)
	{
		this.currentServerTransaction = serverTransaction;
	}
	public ServerTransaction getInitialServerTransaction()
	{
		return initialServerTransaction;
	}
	public ClientTransaction getInitialClientTransaction()
	{
		return initialClientTransaction;
	}
	public void setClientTransaction(ClientTransaction clientTransaction)
	{
		this.currentClientTransaction = clientTransaction;
	}
	public CallLegType getType()
	{
		return type;
	}
	
	/**
	 * 
	 */
	public Request getInitialRequest()
	{
		//		return initialRequest;
		//Are these still valid?
		return type.equals(CallLegType.INGRESS)? initialServerTransaction.getRequest() : initialClientTransaction.getRequest(); 
	}
	
	/**
	 * 
	 */
	public String toString()
	{
		return "CL:"+callId+" / ICT: "+initialClientTransaction+
		" / CT: "+currentClientTransaction+
		" / IST: "+initialServerTransaction+
		" / ST: "+currentServerTransaction;
	}
	
	/**
	 * 
	 */
	public void cleanUp()
	{		
		
		if (this.initialClientTransaction != null)
		{
			try
			{
				this.initialClientTransaction.terminate();
				if(logger.isDebugEnabled())logger.debug("Terminating initial CT: "+initialClientTransaction);
//				sipDialog = (SIPDialog)this.clientTransaction.getDialog();
//				if (sipDialog != null)
//				{
//					if (sipDialog.getLastTransaction() != null)
//						sipDialog.getLastTransaction().terminate();
//					if (sipDialog.getFirstTransaction() != null)
//						sipDialog.getFirstTransaction().terminate();
//				}
			}
			catch (Exception ex) {
				logger.error("LegId=" + callId + " - Exception deleting clientTransaction=" + ex, ex);
			}
			
//			if (this.clientTransaction.getDialog() != null)
//			{
//				try
//				{
//					this.clientTransaction.getDialog().delete();
//				}
//				catch (Exception ex) {
//					logger.error("LegId=" + legId + " - Exception deleting clientTransaction dialog=" + ex, ex);
//				}
//			}
		}
		
		if (this.currentClientTransaction != null)
		{
			try
			{
				this.currentClientTransaction.terminate();
				if(logger.isDebugEnabled())logger.debug("Terminating CT: "+currentClientTransaction);
//				sipDialog = (SIPDialog)this.originalClientTransaction.getDialog();
//				if (sipDialog != null)
//				{
//					if (sipDialog.getLastTransaction() != null)
//						sipDialog.getLastTransaction().terminate();
//					if (sipDialog.getFirstTransaction() != null)
//						sipDialog.getFirstTransaction().terminate();
//				}
			}
			catch (Exception ex) {
				logger.error("LegId=" + callId + " - Exception deleting originalClientTransaction=" + ex, ex);
			}
			
//			if (this.originalClientTransaction.getDialog() != null)
//			{
//				try
//				{
//					this.originalClientTransaction.getDialog().delete();
//				}
//				catch (Exception ex) {
//					logger.error("LegId=" + legId + " - Exception deleting originalClientTransaction dialog=" + ex, ex);
//				}
//			}
		}
				
		if (this.initialServerTransaction != null)
		{
			try
			{
				if(logger.isDebugEnabled())logger.debug("Terminating initial ST: "+initialServerTransaction);
				this.initialServerTransaction.terminate();
				
//				sipDialog = (SIPDialog)this.serverTransaction.getDialog();
//				if (sipDialog != null)
//				{
//					if (sipDialog.getLastTransaction() != null)
//						sipDialog.getLastTransaction().terminate();
//					if (sipDialog.getFirstTransaction() != null)
//						sipDialog.getFirstTransaction().terminate();
//				}
			}
			catch (Exception ex) {
				logger.error("LegId=" + callId + " - Exception deleting serverTransaction=" + ex, ex);
			}
			
//			if (this.serverTransaction.getDialog() != null)
//			{
//				try
//				{
//					this.serverTransaction.getDialog().delete();
//				}
//				catch (Exception ex) {
//					logger.error("LegId=" + legId + " - Exception deleting serverTransaction dialog=" + ex, ex);
//				}
//			}
		}
		
		if (this.currentServerTransaction != null)
		{
			try
			{
				this.currentServerTransaction.terminate();
				if(logger.isDebugEnabled())logger.debug("Terminating ST: "+currentServerTransaction);
//				sipDialog = (SIPDialog)this.originalServerTransaction.getDialog();
//				if (sipDialog != null)
//				{
//					if (sipDialog.getLastTransaction() != null)
//						sipDialog.getLastTransaction().terminate();
//					if (sipDialog.getFirstTransaction() != null)
//						sipDialog.getFirstTransaction().terminate();
//				}
			}
			catch (Exception ex) {
				logger.error("LegId=" + callId + " - Exception deleting originalServerTransaction=" + ex, ex);
			}
			
//			if (this.originalServerTransaction.getDialog() != null)
//			{
//				try
//				{
//					this.originalServerTransaction.getDialog().delete();
//				}
//				catch (Exception ex) {
//					logger.error("LegId=" + legId + " - Exception deleting originalServerTransaction dialog=" + ex, ex);
//				}
//			}
		}
		
		if ( (this.initialClientTransaction != null) && (this.initialClientTransaction.getDialog() != null) ) 
		{
			this.initialClientTransaction.getDialog().delete();
			if(logger.isDebugEnabled())logger.debug("Terminating ICT dialog: "+initialClientTransaction.getDialog());			
		}
		if ( (this.currentClientTransaction != null) && (this.currentClientTransaction.getDialog() != null) )
		{
			this.currentClientTransaction.getDialog().delete();
			if(logger.isDebugEnabled())logger.debug("Terminating CT dialog: "+currentClientTransaction.getDialog());		
		}
		if ( (this.initialServerTransaction != null) && (this.initialServerTransaction.getDialog() != null) )
		{
			this.initialServerTransaction.getDialog().delete();
			if(logger.isDebugEnabled())logger.debug("Terminating IST dialog: "+initialServerTransaction.getDialog());					
		}
		if ( (this.currentServerTransaction != null) && (this.currentServerTransaction.getDialog() != null) )
		{
			this.currentServerTransaction.getDialog().delete();
			if(logger.isDebugEnabled())logger.debug("Terminating ST dialog: "+currentServerTransaction.getDialog());		
		}
		this.initialClientTransaction = null;
		this.currentClientTransaction = null;
		this.initialServerTransaction = null;
		this.currentServerTransaction = null;		
	}
		
		//	public void deleteTransactions()
		//	{
		//		
		////		if (this.isTerminatingCallLeg())  meaning outgoing
		////		{
		//			if (this.initialClientTransaction != null)
		//			{
		//				try
		//				{
		//					this.initialClientTransaction.terminate();
		//				}
		//				catch (Exception ex) {
		//				logger.error("LegId=" + callId + " - Exception deleting client transaction=" + ex, ex);
		//				}
		//				
		//				if (this.initialClientTransaction.getDialog() != null)
		//					this.initialClientTransaction.getDialog().delete();
		//
		//			}
		//
		////		}
		////		else  meaning incoming
		////		{
		//			if (this.initialServerTransaction != null)
		//			{
		//				try
		//				{
		//					this.initialServerTransaction.terminate();
		//				}
		//				catch (Exception ex) {
		//					logger.error("LegId=" + callId + " - Exception deleting server transaction=" + ex, ex);
		//				}
		//				
		//				if (this.initialServerTransaction.getDialog() != null)
		//					this.initialServerTransaction.getDialog().delete();
		//			}
		////		}
		//		
		//		this.initialClientTransaction = null;
		//		this.currentClientTransaction = null;
		//		this.initialServerTransaction = null;
		//		this.currentServerTransaction = null;	
		//	}

}
